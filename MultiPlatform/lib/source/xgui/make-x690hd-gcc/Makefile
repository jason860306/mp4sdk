#*************************************************************************\
#  Copyright (c) 2007 by China Chip Tech.                                 *
#                                                                         *
#   PROJECT     : ccpmp                                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   PROCESSOR   : MIPS 4Kc (32 bit RISC) - 4730 board                     *
#                                                                         *
#   Tool-chain  : sde-gcc                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.a : The file is archives for ccpmp.                                 *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#                                                                         *
#  History :                                                              *
#    Version      Date      Author     Memo                               *
#     1.0     2008-1-30      rainy    Created.                            *
#*************************************************************************/

TARGET    = xgui
CPP       = arm-linux-g++
CC        = arm-linux-gcc
AR				=	arm-linux-ar rus

TARGRT_DIR	= x690hd_gcc
					
# *************************************************************************
# Directories
# *************************************************************************
INC_ENV    = ../../../../inc
ROOTDIR    = ../

SRCDIR    = $(ROOTDIR) \
						
INCDIR    =	$(SRCDIR) \
						$(INC_ENV) \
						
VPATH     = $(SRCDIR)

# *************************************************************************
# Compiler and linker options
# *************************************************************************

# machine defined
DEFINE =	__MULTIPLATFORM__           \
					__MULTIPLATFORM_X690HD__    \

#debug setting
ifeq ("$(debug)", "enable")
DEFINE += __DEBUG_TRACE
endif

INCLUDE   = $(addprefix -I,$(INCDIR))
_DEFINE   = $(addprefix -D,$(DEFINE))

#使用O1和O2和O3都会引起错误(临时寄存器的保护问题)
W_OPTS    = -fno-pic -pipe -O0 -Wall -finline-functions -fomit-frame-pointer -msoft-float \
-fno-builtin -mcpu=arm926ej-s

CC_OPTS   = -c -g $(INCLUDE) $(W_OPTS) $(_DEFINE)

CPP_OPTS  =	-c -fno-exceptions -fno-rtti $(INCLUDE) $(W_OPTS) $(_DEFINE)

CC_OPTS_A = $(CC_OPTS)


LINK	=	sde-g++

LFLAGS	=

LIBS	=	$(SUBLIBS) -lm -lz

TAR		=	tar -cf

GZIP	=	gzip -9f

STR		=	sde-strip -g -x

# *************************************************************************
# Files to be compiled
# *************************************************************************

#SRC_C   = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
#SRC_CPP = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.cpp))
#SRC_S   = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.S))
SRC_C    = xgui.c
           
SRC_CPP  =
SRC_S    =
SRC     = $(SRC_C) $(SRC_CPP) $(SRC_S)

#OBJ_C   = $(patsubst %.c, %.o, $(SRC_C))

OBJ_C   = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CPP = $(notdir $(patsubst %.cpp, %.o, $(SRC_CPP)))
OBJ_S   = $(notdir $(patsubst %.S, %.o, $(SRC_S)))

OBJ     = $(OBJ_C) $(OBJ_CPP) $(OBJ_S)

# *************************************************************************
# Image file names and map file
# *************************************************************************

IMAGE_LIB = $(TARGET).a

# *************************************************************************
# Rules
# *************************************************************************

.PHONY : all

all : $(IMAGE_LIB)

$(IMAGE_LIB) : $(OBJ) $(OBJ_MXU)
	$(AR) $(TARGET).a $(OBJ) $(OBJ_MXU)
	cp $(TARGET).a ../../../$(TARGRT_DIR)/ 

$(OBJ_C) : %.o : %.c %.dc
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_CPP) : %.o : %.cpp %.dcpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(MXU) $< > $@.S
	$(CC) $(CC_OPTS_A) -o $@ $@.S

%.dc: %.c
	$(CC) -M $(CC_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

%.dcpp: %.c
	$(CC) -M $(CPP_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

.PHONY : clean depend

clean :
	rm -f $(IMAGE_LIB) $(OBJ) $(OBJ_MXU) $(MAP) *.S *.m *.dc *.dcpp

#sinclude $(OBJ_C:.o=.dc)
#sinclude $(OBJ_CPP:.o=.dcpp)

# *************************************************************************
#                              END  OF  FILE
# *************************************************************************

