#*************************************************************************\
#  Copyright (c) 2007 by China Chip Tech.                                 *
#                                                                         *
#   PROJECT     : ccpmp                                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   PROCESSOR   : MIPS 4Kc (32 bit RISC) - 4730 board                     *
#                                                                         *
#   Tool-chain  : sde-gcc                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.a : The file is archives for ccpmp.                                 *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#                                                                         *
#  History :                                                              *
#    Version      Date      Author     Memo                               *
#     1.0     2008-1-30      rainy    Created.                            *
#*************************************************************************/

TARGET    = MultiMedia
CPP       = mipsel-linux-g++
CC        = mipsel-linux-gcc
LD        = mipsel-linux-ld
OBJCOPY   = mipsel-linux-objcopy
OBJDUMP   = mipsel-linux-objdump
MXU       = mxu_as

# *************************************************************************
# Directories
# *************************************************************************
INC_ENV    = ../../../../inc
ROOTDIR    = ..

SRCDIR    = $(ROOTDIR) \
						$(ROOTDIR)/bmp \
						$(ROOTDIR)/ico \
						$(ROOTDIR)/jpg \
						$(ROOTDIR)/png \
						$(ROOTDIR)/png/libpng-1.2.35-src \
						$(ROOTDIR)/png/zlib-1.2.3 \
						$(ROOTDIR)/common/imager \
						$(ROOTDIR)/jpg/jpeg-6b \
						
INCDIR    =	$(SRCDIR) \
						$(INC_ENV) \
						
VPATH     = $(SRCDIR)

# *************************************************************************
# Compiler and linker options
# *************************************************************************

INCLUDE   = $(addprefix -I,$(INCDIR))

ENDIAN    = EL

ENV_MACRO =
#ENV_MACRO = -DGMX760P -D"gba_trace(...)=(void)0" -DBUILD_TEST
#ENV_MACRO = -DGMX760P -D"gba_trace(...)=printf"

W_OPTS    = -Wall -finline-functions -fomit-frame-pointer -msoft-float \
-fno-builtin -fno-exceptions

CC_OPTS   = -g -c -O2 $(INCLUDE) -mips32 $(W_OPTS) -mno-abicalls -fno-pic \
-pipe -G 0 -D__NO_INLINE__ \

CPP_OPTS  =	-c -fno-exceptions -fno-rtti -Wall -W \
-DNO_DEBUG -DGCC_BUILD $(ENV_MACRO) \
$(W_OPTS) -fno-pic -pipe -O

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_ -DMPU_JZ4740 $(ENV_MACRO)

LINK	=	sde-g++

LFLAGS	=

LIBS	=	$(SUBLIBS) -lm -lz

TAR		=	tar -cf

GZIP	=	gzip -9f

STR		=	sde-strip -g -x

AR		=	sde-ar rus

# *************************************************************************
# Files to be compiled
# *************************************************************************

SRC_LIBJPEG = jcapimin.c \
              jcapistd.c \
              jccoefct.c \
              jccolor.c \
              jcdctmgr.c \
              jchuff.c \
              jcinit.c \
              jcmainct.c \
              jcmarker.c \
              jcmaster.c \
              jcomapi.c \
              jcparam.c \
              jcphuff.c \
              jcprepct.c \
              jcsample.c \
              jctrans.c \
              jdapimin.c \
              jdapistd.c \
              jdatadst.c \
              jdatasrc.c \
              jdcoefct.c \
              jdcolor.c \
              jddctmgr.c \
              jdhuff.c \
              jdinput.c \
              jdmainct.c \
              jdmarker.c \
              jdmaster.c \
              jdmerge.c \
              jdphuff.c \
              jdpostct.c \
              jdsample.c \
              jdtrans.c \
              jerror.c \
              jfdctflt.c \
              jfdctfst.c \
              jfdctint.c \
              jidctflt.c \
              jidctfst.c \
              jidctint.c \
              jidctred.c \
              jmemnobs.c \
              jmemmgr.c \
              jquant1.c \
              jquant2.c \
              jutils.c \
              rdbmp.c \
              rdcolmap.c \
              rdppm.c \
              rdrle.c \
              rdswitch.c \
              rdtarga.c \
              transupp.c \
              wrbmp.c \
              wrgif.c \
              wrppm.c \
              wrrle.c \
              wrtarga.c \
              
              
SRC_LIBPNG =	png.c pngerror.c pnggccrd.c pngget.c pngmem.c pngpread.c pngread.c \
							pngrio.c pngrtran.c pngrutil.c pngset.c pngtrans.c pngvcrd.c pngwio.c \
							pngwrite.c pngwtran.c pngwutil.c \
          
SRC_C    = MM_Image.c \
		   MM_imager.c \
           MM_ico.c \
           msicon.c \
           MM_bmp.c \
           MM_jpg.c \
           MM_png.c \
           $(SRC_LIBJPEG) \
           $(SRC_LIBPNG) \
           
SRC_CPP  =
SRC_S    =
SRC     = $(SRC_C) $(SRC_CPP) $(SRC_S)

OBJ_C   = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CPP = $(notdir $(patsubst %.cpp, %.o, $(SRC_CPP)))
OBJ_S   = $(notdir $(patsubst %.S, %.o, $(SRC_S)))

OBJ     = $(OBJ_C) $(OBJ_CPP) $(OBJ_S)

# *************************************************************************
# Image file names and map file
# *************************************************************************

IMAGE_LIB = $(TARGET).a

# *************************************************************************
# Rules
# *************************************************************************

.PHONY : all

all : $(IMAGE_LIB)

$(IMAGE_LIB) : $(OBJ) $(OBJ_MXU)
	$(AR) $(TARGET).a $(OBJ) $(OBJ_MXU)
	cp $(TARGET).a ../../../gcc-mips/ 

$(OBJ_C) : %.o : %.c %.dc
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_CPP) : %.o : %.cpp %.dcpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(MXU) $< > $@.S
	$(CC) $(CC_OPTS_A) -o $@ $@.S

%.dc: %.c
	$(CC) -M $(CC_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

%.dcpp: %.c
	$(CC) -M $(CPP_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

.PHONY : clean depend

clean :
	rm -f $(IMAGE_LIB) $(OBJ) $(OBJ_MXU) $(MAP) *.S *.m *.dc *.dcpp

sinclude $(OBJ_C:.o=.dc)
sinclude $(OBJ_CPP:.o=.dcpp)

# *************************************************************************
#                              END  OF  FILE
# *************************************************************************

