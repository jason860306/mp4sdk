#*************************************************************************\
#  Copyright (c) 2007 by China Chip Tech.                                 *
#                                                                         *
#   PROJECT     : ccpmp                                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   PROCESSOR   : MIPS 4Kc (32 bit RISC) - 4730 board                     *
#                                                                         *
#   Tool-chain  : sde-gcc                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.a : The file is archives for ccpmp.                                 *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#                                                                         *
#  History :                                                              *
#    Version      Date      Author     Memo                               *
#     1.0     2008-1-30      rainy    Created.                            *
#*************************************************************************/

TARGET    = wchar
CPP       = sde-g++
CC        = sde-gcc
MXU       = mxu_as

# *************************************************************************
# Directories
# *************************************************************************

SRCDIR    = ../ \

INCDIR    =	$(SRCDIR) \
						../../../../inc \
					
VPATH     = $(SRCDIR)

# *************************************************************************
# Compiler and linker options
# *************************************************************************

INCLUDE   = $(addprefix -I,$(INCDIR))

ENDIAN    = EL

ENV_MACRO =

W_OPTS    = -Wall -finline-functions -fomit-frame-pointer -msoft-float \
-fno-builtin -fno-exceptions

CC_OPTS   = -c -g -Wall -W  -$(ENDIAN) $(INCLUDE) -G0 \
-DNO_DEBUG -DGCC_BUILD -DMPU_JZ4740 $(ENV_MACRO) \
-fno-pic -mips32 $(W_OPTS) -mno-abicalls -funsigned-char -pipe -G 0 -O \
-DNDEBUG -D_LIB -DFT2_BUILD_LIBRARY -DNULL=0 -Dsize_t=int\

CPP_OPTS  =	-c -fno-exceptions -fno-rtti -Wall -W \
-DNO_DEBUG -DGCC_BUILD $(ENV_MACRO) \
$(W_OPTS) -fno-pic -pipe -O

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_ -DMPU_JZ4740 $(ENV_MACRO)

LINK	=	sde-g++

LFLAGS	=

LIBS	=	$(SUBLIBS) -lm -lz

TAR		=	tar -cf

GZIP	=	gzip -9f

STR		=	sde-strip -g -x

AR		=	sde-ar rus

# *************************************************************************
# Files to be compiled
# *************************************************************************

SRC_C   = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.c))
SRC_CPP = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.cpp))
SRC_S   = $(foreach dir, $(SRCDIR), $(wildcard $(dir)/*.S))
SRC     = $(SRC_C) $(SRC_CPP) $(SRC_S)

OBJ_C   = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CPP = $(notdir $(patsubst %.cpp, %.o, $(SRC_CPP)))
OBJ_S   = $(notdir $(patsubst %.S, %.o, $(SRC_S)))

OBJ     = $(OBJ_C) $(OBJ_CPP) $(OBJ_S)

# *************************************************************************
# Image file names and map file
# *************************************************************************

IMAGE_LIB = $(TARGET).a

# *************************************************************************
# Rules
# *************************************************************************

.PHONY : all

all : $(IMAGE_LIB)

$(IMAGE_LIB) : $(OBJ) $(OBJ_MXU)
	$(AR) $(TARGET).a $(OBJ) $(OBJ_MXU)
	cp $(TARGET).a ../../../gcc-mips/

$(OBJ_C) : %.o : %.c %.dc
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_CPP) : %.o : %.cpp %.dcpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(MXU) $< > $@.S
	$(CC) $(CC_OPTS_A) -o $@ $@.S

%.dc: %.c
	$(CC) -M $(CC_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

%.dcpp: %.c
	$(CC) -M $(CPP_OPTS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

.PHONY : clean depend

clean :
	rm -f $(IMAGE_LIB) $(OBJ) $(OBJ_MXU) $(MAP) *.S *.m *.dc *.dcpp

sinclude $(OBJ_C:.o=.dc)
sinclude $(OBJ_CPP:.o=.dcpp)

# *************************************************************************
#                              END  OF  FILE
# *************************************************************************

