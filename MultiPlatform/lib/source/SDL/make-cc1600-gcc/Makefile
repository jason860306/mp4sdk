#*************************************************************************\
#  Copyright (c) 2007 by China Chip Tech.                                 *
#                                                                         *
#   PROJECT     : ccpmp                                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   PROCESSOR   : MIPS 4Kc (32 bit RISC) - 4730 board                     *
#                                                                         *
#   Tool-chain  : arm-linux-gcc                                                 *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.a : The file is archives for ccpmp.                                 *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#                                                                         *
#  History :                                                              *
#    Version      Date      Author     Memo                               *
#     1.0     2008-1-30      rainy    Created.                            *
#*************************************************************************/

TARGET    = libSDL
CPP       = arm-linux-g++
CC        = arm-linux-gcc
LD        = arm-linux-ld
OBJCOPY   = arm-linux-objcopy
OBJDUMP   = arm-linux-objdump
AR        = arm-linux-ar
MXU       = mxu_as

# *************************************************************************
# Directories
# *************************************************************************
INC_ENV    = ../../../../inc
ROOTDIR    = ..

SRCDIR    = $(ROOTDIR) \
						$(ROOTDIR)/src \
						$(ROOTDIR)/src/audio \
						$(ROOTDIR)/src/audio/mpf \
						$(ROOTDIR)/src/cdrom \
						$(ROOTDIR)/src/cdrom/dummy \
						$(ROOTDIR)/src/cpuinfo \
						$(ROOTDIR)/src/events \
						$(ROOTDIR)/src/file \
						$(ROOTDIR)/src/joystick \
						$(ROOTDIR)/src/joystick/dummy \
						$(ROOTDIR)/src/loadso/dummy \
						$(ROOTDIR)/src/main/dummy \
						$(ROOTDIR)/src/stdlib \
						$(ROOTDIR)/src/thread \
						$(ROOTDIR)/src/thread/mpf \
						$(ROOTDIR)/src/timer \
						$(ROOTDIR)/src/timer/mpf \
						$(ROOTDIR)/src/video \
						$(ROOTDIR)/src/video/mpf \
						
INCDIR    =	$(SRCDIR) \
						$(INC_ENV) \
						$(ROOTDIR)/include \
						
VPATH     = $(SRCDIR)

# *************************************************************************
# Compiler and linker options
# *************************************************************************

INCLUDE   = $(addprefix -I,$(INCDIR))

ENV_MACRO =

W_OPTS    = -Wall -finline-functions -fomit-frame-pointer -msoft-float \
-fno-builtin -fno-exceptions

CC_OPTS   = -c -g -Wall -W $(INCLUDE) \
-DNO_DEBUG -DGCC_BUILD $(ENV_MACRO) \
-fno-pic $(W_OPTS) -pipe -O \

CPP_OPTS  =	-c -fno-exceptions -fno-rtti -Wall -W \
-DNO_DEBUG -DGCC_BUILD $(ENV_MACRO) \
$(W_OPTS) -fno-pic -pipe -O

CC_OPTS_A = $(CC_OPTS) -D_ASSEMBLER_ -DMPU_JZ4740 $(ENV_MACRO)

LINK	=	arm-linux-g++

LFLAGS	=

LIBS	=	$(SUBLIBS) -lm -lz

TAR		=	tar -cf

GZIP	=	gzip -9f

STR		=	arm-linux-strip -g -x

AR		=	arm-linux-ar rus

# *************************************************************************
# Files to be compiled
# *************************************************************************

SRC_C    =	SDL.c SDL_error.c SDL_fatal.c \
						SDL_audio.c SDL_audiocvt.c SDL_audiodev.c SDL_mixer.c SDL_mixer_m68k.c SDL_mixer_MMX.c SDL_mixer_MMX_VC.c SDL_wave.c \
						SDL_mpf_audio.c \
						SDL_cdrom.c \
						SDL_syscdrom.c \
						SDL_cpuinfo.c \
						SDL_active.c SDL_events.c SDL_expose.c SDL_keyboard.c SDL_mouse.c SDL_quit.c SDL_resize.c \
						SDL_rwops.c \
						SDL_joystick.c \
						SDL_sysjoystick.c \
						SDL_sysloadso.c \
						SDL_dummy_main.c \
						SDL_getenv.c SDL_iconv.c SDL_malloc.c SDL_qsort.c SDL_stdlib.c SDL_string.c \
						SDL_thread.c \
						SDL_sysmutex.c SDL_syssem.c SDL_systhread.c \
						SDL_timer.c \
						SDL_systimer.c \
						SDL_blit.c SDL_blit_0.c SDL_blit_1.c SDL_blit_A.c SDL_blit_N.c SDL_bmp.c SDL_cursor.c SDL_gamma.c SDL_pixels.c SDL_RLEaccel.c SDL_stretch.c SDL_surface.c SDL_video.c SDL_yuv.c SDL_yuv_mmx.c SDL_yuv_sw.c \
						SDL_mpf_events.c SDL_mpf_mouse.c SDL_mpf_video.c
						
           
SRC_CPP  =
SRC_S    =
SRC     = $(SRC_C) $(SRC_CPP) $(SRC_S)

#OBJ_C   = $(patsubst %.c, %.o, $(SRC_C))

OBJ_C   = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CPP = $(notdir $(patsubst %.cpp, %.o, $(SRC_CPP)))
OBJ_S   = $(notdir $(patsubst %.S, %.o, $(SRC_S)))

OBJ     = $(OBJ_C) $(OBJ_CPP) $(OBJ_S)

# *************************************************************************
# Image file names and map file
# *************************************************************************

IMAGE_LIB = $(TARGET).a

# *************************************************************************
# Rules
# *************************************************************************

.PHONY : all

all : $(IMAGE_LIB)

$(IMAGE_LIB) : $(OBJ) $(OBJ_MXU)
	$(AR) $(TARGET).a $(OBJ) $(OBJ_MXU)

$(OBJ_C) : %.o : %.c
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_CPP) : %.o : %.cpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -o $@ $<

.PHONY : clean depend

clean :
	rm -f $(IMAGE_LIB) $(OBJ) $(OBJ_MXU) $(MAP) *.S *.m *.dc *.dcpp

# *************************************************************************
#                              END  OF  FILE
# *************************************************************************

