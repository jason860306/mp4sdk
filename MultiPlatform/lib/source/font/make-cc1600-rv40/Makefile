#*************************************************************************\
#  																lzysoft                                 *
#                                                                         *
#   PROJECT     : ccpmp                                                   *
#                                                                         *
#   MODULE      : MakeFile                                                *
#                                                                         *
#   PROCESSOR   : arm926 x690hd															              *
#                                                                         *
#   Tool-chain  : arm-linux-gcc                                           *
#                                                                         *
#   DESCRIPTION :                                                         *
#   Makefile used for building application.                               *
#                                                                         *
#   The default target (all) builds application in two formats :          *
#   *.a : The file is archives for ccpmp.                                 *
#                                                                         *
#   Other targets are :                                                   *
#   clean :    Deletes all files generated by makefile.                   *
#                                                                         *
#  History :                                                              *
#    Version      Date      Author     Memo                               *
#     1.0     2008-1-30      rainy    Created.                            *
#*************************************************************************/

TARGET    = font

CPP       = armcc
CC        = armcc
LD        = armlink
AR				=	ar rus

# *************************************************************************
# Directories
# *************************************************************************

ROOTDIR    = ../

FT2_ROOT       =  $(ROOTDIR)/freetype-2.3.8
FT2_INC_ROOT   =  $(FT2_ROOT)/include
FT2_SRC_ROOT   =  $(FT2_ROOT)/src
FT2_SRC        =  $(FT2_SRC_ROOT)/autofit \
                  $(FT2_SRC_ROOT)/base \
                  $(FT2_SRC_ROOT)/bdf \
                  $(FT2_SRC_ROOT)/cache \
                  $(FT2_SRC_ROOT)/cff \
                  $(FT2_SRC_ROOT)/cid \
                  $(FT2_SRC_ROOT)/gxvalid \
                  $(FT2_SRC_ROOT)/gzip \
                  $(FT2_SRC_ROOT)/lzw \
                  $(FT2_SRC_ROOT)/otvalid \
                  $(FT2_SRC_ROOT)/pcf \
                  $(FT2_SRC_ROOT)/pfr \
                  $(FT2_SRC_ROOT)/psaux \
                  $(FT2_SRC_ROOT)/pshinter \
                  $(FT2_SRC_ROOT)/psnames \
                  $(FT2_SRC_ROOT)/raster \
                  $(FT2_SRC_ROOT)/sfnt \
                  $(FT2_SRC_ROOT)/smooth \
                  $(FT2_SRC_ROOT)/tools \
                  $(FT2_SRC_ROOT)/truetype \
                  $(FT2_SRC_ROOT)/type1 \
                  $(FT2_SRC_ROOT)/type42 \
                  $(FT2_SRC_ROOT)/winfonts \

SRCDIR    = $(ROOTDIR) \
						$(FT2_SRC) \
						$(ROOTDIR)/Hzk16 \
						$(ROOTDIR)/libbmf \
						
INCDIR    =	../../../../inc \
						$(SRCDIR) \
						$(INC_ENV) \
						$(FT2_INC_ROOT)
						
VPATH     = $(SRCDIR)

#include include "-I"
INCCMD		= 

#defined include "-D"
DEFCMD		=	-D"__align=arm_align" \
						-D"inline=__inline" \
						-D"__gnuc_va_list=va_list" \

# defined
DEFINE =	__MULTIPLATFORM__ \
					__MULTIPLATFORM_CC1600_GCC__ \
					__MULTIPLATFORM_CC1600__ \
					\
					FT2_BUILD_LIBRARY \
					FT_CONFIG_OPTION_NO_ASSEMBLER \

# *************************************************************************
# Compiler and linker options
# *************************************************************************

INCLUDE   = $(addprefix -I,$(INCDIR))

INCLUDE   = $(addprefix -I,$(INCDIR)) $(INCCMD)
_DEFINE   = $(addprefix -D,$(DEFINE)) $(DEFCMD)

CC_OPTS   = -c -W --gnu --enum_is_int --cpu=ARM926EJ-S --fpu=SoftVFP -O3 -Otime $(INCLUDE) $(_DEFINE)

CPP_OPTS  =	-c -W --gnu --enum_is_int --cpu=ARM926EJ-S --fpu=SoftVFP -O3 -Otime $(INCLUDE) $(_DEFINE)

CC_OPTS_A = --cpu=ARM926EJ-S --fpu=SoftVFP

# *************************************************************************
# Files to be compiled
# *************************************************************************

SRC_C    = ft2.c font.c font_hzk.c font_ascii.c font_nls.c font_cache.c ccbmf.c \
          autofit.c bdf.c cff.c ftbase.c ftbbox.c ftbdf.c ftbitmap.c ftcache.c \
          ftdebug.c ftgasp.c ftglyph.c ftgxval.c ftgzip.c ftinit.c ftlzw.c ftmm.c \
          ftotval.c ftpfr.c ftstroke.c ftsynth.c ftsystem.c fttype1.c ftwinfnt.c \
          ftxf86.c pcf.c pfr.c psaux.c pshinter.c psmodule.c raster.c sfnt.c \
          smooth.c truetype.c type1.c type1cid.c type42.c winfnt.c \
           
SRC_CPP  =
SRC_S    =
SRC     = $(SRC_C) $(SRC_CPP) $(SRC_S)

OBJ_C   = $(notdir $(patsubst %.c, %.o, $(SRC_C)))
OBJ_CPP = $(notdir $(patsubst %.cpp, %.o, $(SRC_CPP)))
OBJ_S   = $(notdir $(patsubst %.S, %.o, $(SRC_S)))

OBJ     = $(OBJ_C) $(OBJ_CPP) $(OBJ_S)

# *************************************************************************
# Image file names and map file
# *************************************************************************

IMAGE_LIB = $(TARGET).a

# *************************************************************************
# Rules
# *************************************************************************

.PHONY : all

all : $(IMAGE_LIB)

$(IMAGE_LIB) : $(OBJ)
	$(AR) $(TARGET).a $(OBJ)
	cp $(TARGET).a ../../../cc1600-rv40/

$(OBJ_C) : %.o : %.c
	$(CC) $(CC_OPTS) -o $@ $<

$(OBJ_CPP) : %.o : %.cpp
	$(CPP) $(CPP_OPTS) -o $@ $<

$(OBJ_S) : %.o : %.S
	$(CC) $(CC_OPTS_A) -o $@ $@.S

.PHONY : clean depend

clean :
	rm -f $(IMAGE_LIB) $(OBJ) $(MAP)

# *************************************************************************
#                              END  OF  FILE
# *************************************************************************

